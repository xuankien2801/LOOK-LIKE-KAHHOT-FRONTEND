/* eslint-disable no-unused-vars */
import React from 'react';
import PropTypes from 'prop-types';
import { Button, Checkbox } from '@mui/material';
import { OptionDiv } from './QuestionOptions';

const optionStyle = {
  width: '100%',
}

export const labelStyle = {
  position: 'relative',
  top: '8px',
  textAlign: 'right',
}

export const correctLabelDiv = {
  width: '83px',
  marginLeft: '5px',
}

export const incorrectLabelDiv = {
  marginLeft: '5px',
}

// This component forms the answer options generated by the AnswerPanel component
const AnswerOption = ({ options, answerIds }) => {
  const [checkBoxs, setCheckBoxs] = React.useState([false, false, false, false, false, false]);

  React.useEffect(() => {
    console.log(options);
    console.log(typeof answerIds[0]);
    console.log(answerIds);
  }, [options, answerIds]);

  // This useEffect initialises the checkBoxes
  React.useEffect(() => {
    findAnswers();
  }, []);

  // This function fills tells the checkBoxs state which answers are correct
  const findAnswers = () => {
    const newCheckBoxs = [...checkBoxs];
    let index = 0;
    newCheckBoxs.forEach(box => {
      if (answerIds !== undefined && answerIds.includes(index)) {
        newCheckBoxs[index] = true;
      }
      index += 1;
    })
    setCheckBoxs(newCheckBoxs);
  }

  return (
    <>
      {options.map((option, index) => {
        return (
          <OptionDiv key={index}>
            <Button id={`option-${index + 1}`} variant='contained' style={optionStyle} aria-label='Answer option'>{option.answer}</Button>
            {checkBoxs[index] && <div id={`correct-${index + 1}`} className='correct-option' style={correctLabelDiv}><label htmlFor={`answer${index}`} style={labelStyle}>Correct</label></div>}
            {!checkBoxs[index] && <div id={`incorrect-${index + 1}`} className='incorrect-option' style={incorrectLabelDiv}><label htmlFor={`answer${index}`} style={labelStyle}>Incorrect</label></div>}
            <Checkbox id={`answer${index}`} checked={checkBoxs[index]} color="success" aria-label='Answer checkbox ticked if correct'></Checkbox>
          </OptionDiv>
        )
      })}
    </>
  )
}

AnswerOption.propTypes = {
  options: PropTypes.array,
  answerIds: PropTypes.array,
}

export default AnswerOption;